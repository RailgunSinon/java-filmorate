DROP TABLE IF EXISTS Genre CASCADE;
DROP TABLE IF EXISTS Rating CASCADE;
DROP TABLE IF EXISTS FilmGenres CASCADE;
DROP TABLE IF EXISTS Films CASCADE;
DROP TABLE IF EXISTS Likes CASCADE;
DROP TABLE IF EXISTS Users CASCADE;
DROP TABLE IF EXISTS Friends CASCADE;
DROP TABLE IF EXISTS FriendshipStatus CASCADE;

CREATE TABLE IF NOT EXISTS Genre
(
    id   integer NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar NOT NULL
);

CREATE TABLE IF NOT EXISTS Rating
(
    id   integer NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar NOT NULL
);

CREATE TABLE IF NOT EXISTS Films
(
    id          integer NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name        varchar NOT NULL,
    description varchar,
    releaseDate date,
    duration    integer,
    rating      integer,
    FOREIGN KEY (rating) REFERENCES Rating (id)
);

CREATE TABLE IF NOT EXISTS Users
(
    id       integer NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email    varchar NOT NULL,
    login    varchar NOT NULL,
    name     varchar,
    birthday date
);

CREATE TABLE IF NOT EXISTS FilmGenres
(
    filmId  integer NOT NULL,
    genreId integer NOT NULL,
    FOREIGN KEY (genreId) REFERENCES Genre (id),
    FOREIGN KEY (filmId) REFERENCES Films (id)
);

CREATE TABLE IF NOT EXISTS Likes
(
    filmId integer NOT NULL,
    userId integer NOT NULL,
    FOREIGN KEY (filmId) REFERENCES Films (id),
    FOREIGN KEY (userId) REFERENCES Users (id)
);

CREATE TABLE IF NOT EXISTS FriendshipStatus
(
    id   integer NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar NOT NULL
);

CREATE TABLE IF NOT EXISTS Friends
(
    userId           integer NOT NULL,
    friendId         integer NOT NULL,
    friendshipStatus integer NOT NULL,
    FOREIGN KEY (userId) REFERENCES Users (id),
    FOREIGN KEY (friendshipStatus) REFERENCES FriendshipStatus (id)
);

